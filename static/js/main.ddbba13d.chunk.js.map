{"version":3,"sources":["constants.js","Pokedex.jsx","stats.jsx","Pokemon.jsx","App.js","serviceWorker.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","container","display","flexWrap","justifyContent","overflow","list","backgroundColor","palette","background","paper","borderBottom","pointer","cursor","menuButton","marginRight","spacing","title","flexGrow","breakpoints","up","topMenu","marginBottom","search","position","borderRadius","shape","fade","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Pokedex","props","classes","history","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","id","sprite","getPokemonList","idPokemon","element","document","Container","className","Grid","item","xs","lg","md","sm","List","ListItem","ListItemAvatar","onClick","push","Avatar","alt","src","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","map","value","React","cloneElement","key","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","onChange","e","target","pokedexContainer","Object","keys","includes","CircularProgress","PrettoSlider","withStyles","thumb","border","marginTop","boxShadow","active","valueLabel","left","track","rail","Slider","Stats","gutterBottom","typeAbiliity","level","valueLabelDisplay","defaultValue","min","max","disable","maxWidth","media","paddingTop","expand","transform","duration","shortest","expandOpen","avatar","blue","Pokemon","expanded","setExpanded","match","params","undefined","setPokemon","catch","error","weight","types","stats","fullImageUrl","typeBR","type","heightBR","weightBR","statsNew","reduce","acc","stat","base_stat","Card","CardHeader","substring","action","subheader","CardMedia","image","CardContent","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","generatePokemonJSX","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ddbba13d.chunk.js","sourcesContent":["export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Button, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, IconButton, InputBase, Container, Avatar, Typography, CircularProgress, Toolbar, AppBar,} from \"@material-ui/core\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container:{    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n  },\r\n  list: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderBottom: '1px solid #ccc'\r\n  },\r\n  pointer:{\r\n    cursor: 'pointer'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  topMenu: {\r\n    marginBottom: '25px'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '18ch',\r\n      '&:focus': {\r\n        width: '24ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\n// Criação dos elemetos da aplicação\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  // Requisição na api pokeapi.co com os 150 primeiros pokemons\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon?limit=150`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        const { results } = data;\r\n        const newPokemonData = {};\r\n        results.forEach((pokemon, index) => {\r\n          newPokemonData[index + 1] = {\r\n            id: index + 1,\r\n            name: pokemon.name,\r\n            sprite: `https://pokeres.bastionbot.org/images/pokemon/${index + 1}.png`,\r\n          };\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      });\r\n  }, []);\r\n\r\n  // Captura os dados do input para filtrar o(s) pokemon(s)\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  \r\n  // Clona o elemento para montagem da lista\r\n  function generate(element) {\r\n    return [0].map((value) =>\r\n      React.cloneElement(element, {\r\n        key: value,\r\n      }),\r\n    );\r\n  }\r\n\r\n  //Cria a listagem dos pokemons\r\n  const getPokemonList = (idPokemon) => {\r\n    const { id, name, sprite } = pokemonData[idPokemon];\r\n\r\n    // Seta o titulo da página\r\n    document.title = `PokeZupe | Home`\r\n\r\n    // Retorna a lista de pokemons\r\n    return (\r\n      <Container className={classes.container}>\r\n        <Grid item xs={12} lg={6} md={8} sm={10}>\r\n          <div className={classes.list}>\r\n           <List>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar onClick={() => history.push(`/${id}`)}>\r\n                    <Avatar className={classes.pointer} alt={toFirstCharUppercase(name)} src={sprite}/>\r\n                  </ListItemAvatar>\r\n                  <ListItemText className={classes.pointer}\r\n                    primary={id + '. ' + toFirstCharUppercase(name)}\r\n                    onClick={() => history.push(`/${id}`)}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"view\" onClick={() => history.push(`/${id}`)}>\r\n                      <VisibilityIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid> \r\n      </Container>      \r\n    );\r\n  };\r\n\r\n  // Menu de busca\r\n  return (\r\n    <>\r\n      <AppBar className={classes.topMenu} position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            PokeZup\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Buscar pokemon\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {pokemonData ? (\r\n        <Grid container spacing={2} className={classes.pokedexContainer}>\r\n          {Object.keys(pokemonData).map(\r\n            (idPokemon) =>\r\n              pokemonData[idPokemon].name.includes(filter) &&\r\n              getPokemonList(idPokemon)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport { Typography, Slider} from \"@material-ui/core\";\r\nimport {  withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Estilização do Slider\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#3f51b5',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\n// Cria o componente Stats com Slider\r\nconst Stats = (props) => {\r\n    return (\r\n        <>\r\n            <Typography id={props.id} gutterBottom>\r\n              {props.typeAbiliity} | {props.level}\r\n            </Typography>\r\n            <PrettoSlider\r\n            valueLabelDisplay=\"auto\"\r\n            aria-label={props.id}\r\n            defaultValue={props.level}\r\n            min={0}\r\n            max={200}\r\n            disable />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats;","import React, { useEffect, useState } from \"react\";\r\nimport { IconButton, Typography, Card, CardHeader, CardMedia, CardContent, CardActions, Collapse, Avatar, CircularProgress, Container, AppBar, Toolbar} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blue } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport Stats from './stats';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport clsx from 'clsx';\r\n\r\n// Estilização dos componentes\r\nconst useStyles = makeStyles((theme) => ({\r\n  container:{    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n  },\r\n  title:{\r\n    cursor: 'pointer'\r\n  },\r\n  topMenu: {\r\n    marginBottom: '25px'\r\n  },\r\n  root: {\r\n    maxWidth: 300,\r\n    width: 600,\r\n    maxWidth: 1200,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '60%',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[500],\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    cursor: 'pointer'\r\n  },\r\n}));\r\n\r\n// Criação dos elemetos da aplicação\r\nconst Pokemon = (props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { idPokemon } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  // Requisição na api pokeapi.co pelo id do pokemon\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${idPokemon}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [idPokemon]);\r\n\r\n  // Cria o card para visualização dos dados do pokemon\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, height, weight, types, stats } = pokemon;\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n\r\n    // Seta o tipo do pokemon\r\n    const typeBR = `Tipo: ${types[0].type.name}`\r\n    // Seta o tamanho do pokemon em cm\r\n    const heightBR = `${height * 10} cm`\r\n    // Seta o peso do pokemon em Kg\r\n    const weightBR = `${weight / 10} Kg`\r\n    \r\n    // Define o título da página\r\n    document.title = `PokeZupe | ${toFirstCharUppercase(name)}`\r\n\r\n    // Habilita a visão dos sliders. default = false\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    \r\n    // Recria um novo objeto para os sliders\r\n    const statsNew = stats.reduce((acc, type)=>{\r\n      acc.push({name: type.stat.name, value: type.base_stat})\r\n      return acc\r\n    },[])\r\n\r\n    // Função cria os sliders com seus respectivos valores\r\n    function generate(obj) {\r\n      return obj.map((item) =>\r\n        React.cloneElement(<Stats id={item.name} typeAbiliity={item.name} level={item.value} />, {\r\n          key: item,\r\n        }),\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <>      \r\n      <AppBar className={classes.topMenu} position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} onClick={() => history.push(\"/pokezup\")} variant=\"h6\" noWrap>\r\n            PokeZup \r\n          </Typography>   \r\n          <Typography variant=\"h6\" noWrap>\r\n             {'⠀|⠀'}{toFirstCharUppercase(name)}\r\n          </Typography>  \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container className={classes.container}>\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar className={classes.avatar} onClick={() => history.push(\"/pokezup\")}>{name.toUpperCase().substring(0, 2)}</Avatar>\r\n            }\r\n            action={\r\n              <IconButton aria-label=\"settings\">\r\n                <HomeIcon onClick={() => history.push(\"/pokezup\")}/>\r\n              </IconButton>\r\n            }\r\n            title={toFirstCharUppercase(name)}\r\n            subheader=''\r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={fullImageUrl}\r\n            title={toFirstCharUppercase(name)}\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {typeBR} | {heightBR} | {weightBR}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions disableSpacing>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Estatísticas</Typography >\r\n              <hr />\r\n              <br />\r\n              \r\n              {generate(statsNew)}\r\n\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      </Container>\r\n      <br />\r\n      </>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n  // Validação caso o pokemon não exista\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Esse pokemon não existe!</Typography>}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport Pokemon from \"./Pokemon\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\n    <Route exact path=\"/pokezup\" render={(props) => <Pokedex {...props} />} />\n    <Route\n      exact\n      path=\"/:idPokemon\"\n      render={(props) => <Pokemon {...props} />}\n    />\n  </Switch>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}